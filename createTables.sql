CREATE TABLE USERS(
        USER_ID NUMBER PRIMARY KEY,
        FIRST_NAME VARCHAR2(100) NOT NULL,
        LAST_NAME VARCHAR2(100) NOT NULL,
        YEAR_OF_BIRTH INTEGER,
        MONTH_OF_BIRTH INTEGER,
        DAY_OF_BIRTH INTEGER,
        GENDER VARCHAR2(100)
);

CREATE TABLE FRIENDS(
        USER1_ID NUMBER,
        USER2_ID NUMBER,
        CONSTRAINT pk_FRIENDS PRIMARY KEY (USER1_ID,USER2_ID), --not sure how to eliminate order
        CONSTRAINT FK_1 FOREIGN KEY (USER1_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
        CONSTRAINT FK_2 FOREIGN KEY (USER2_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

CREATE TABLE CITIES(
        CITY_ID INTEGER PRIMARY KEY,
        CITY_NAME VARCHAR2(100),
        STATE_NAME VARCHAR2(100),
        COUNTRY_NAME VARCHAR2(100)
);

CREATE TABLE USER_CURRENT_CITY(
        USER_ID NUMBER,
        CURRENT_CITY_ID INTEGER,
        CONSTRAINT pk_UCC PRIMARY KEY (USER_ID,CURRENT_CITY_ID),
        CONSTRAINT FK_3 FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
        CONSTRAINT FK_4 FOREIGN KEY (CURRENT_CITY_ID) REFERENCES CITIES(CITY_ID) ON DELETE CASCADE
);

CREATE TABLE USER_HOMETOWN_CITY(
        USER_ID NUMBER,
        HOMETOWN_CITY_ID INTEGER,
        CONSTRAINT pk_UHC PRIMARY KEY (USER_ID,HOMETOWN_CITY_ID),
        CONSTRAINT FK_6 FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
        CONSTRAINT FK_7 FOREIGN KEY (HOMETOWN_CITY_ID) REFERENCES CITIES(CITY_ID) ON DELETE CASCADE
);


CREATE TABLE PROGRAMS(
        PROGRAM_ID INTEGER PRIMARY KEY,
        INSTITUTION VARCHAR2(100),
        CONCENTRATION VARCHAR2(100),
        DEGREE VARCHAR2(100)
);

CREATE TABLE EDUCATION(
        USER_ID NUMBER,
        PROGRAM_ID INTEGER,
        PROGRAM_YEAR INTEGER,
        CONSTRAINT pk_edu PRIMARY KEY (USER_ID,PROGRAM_ID),
        CONSTRAINT FK_8 FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
        CONSTRAINT FK_9 FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAMS(PROGRAM_ID) ON DELETE CASCADE
);

CREATE TABLE USER_EVENTS(
        EVENT_ID NUMBER PRIMARY KEY,
        EVENT_CREATOR_ID NUMBER NOT NULL,
        EVENT_NAME VARCHAR2(100) NOT NULL,
        EVENT_TAGLINE VARCHAR2(100),
        EVENT_DESCRIPTION VARCHAR2(100),
        EVENT_HOST VARCHAR2(100) NOT NULL,
        EVENT_TYPE VARCHAR2(100) NOT NULL,-- WHAt is drop down menu
        EVENT_SUBTYPE VARCHAR2(100) NOT NULL,
        EVENT_LOCATION VARCHAR2(100),
        EVENT_CITY_ID INTEGER,
        EVENT_START_TIME TIMESTAMP NOT NULL,
        EVENT_END_TIME TIMESTAMP NOT NULL,
        CONSTRAINT FK_10 FOREIGN KEY (EVENT_CREATOR_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
        CONSTRAINT FK_11 FOREIGN KEY (EVENT_CITY_ID) REFERENCES CITIES(CITY_ID) ON DELETE CASCADE
);

CREATE TABLE PARTICIPANTS(
        EVENT_ID NUMBER NOT NULL,
        USER_ID NUMBER NOT NULL,
        CONFIRMATION VARCHAR2(100),
        CONSTRAINT pk_par PRIMARY KEY (EVENT_ID,USER_ID),
        CONSTRAINT FK_12 FOREIGN KEY (EVENT_ID) REFERENCES USER_EVENTS(EVENT_ID) ON DELETE CASCADE,
        CONSTRAINT FK_13 FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

CREATE TABLE ALBUMS(
        ALBUM_ID VARCHAR2(100) PRIMARY KEY,
        ALBUM_OWNER_ID NUMBER NOT NULL,
        ALBUM_NAME VARCHAR2(100) NOT NULL,
        ALBUM_CREATED_TIME TIMESTAMP NOT NULL,
        ALBUM_MODIFIED_TIME TIMESTAMP NOT NULL,
        ALBUM_LINK VARCHAR2(2000) NOT NULL,
        ALBUM_VISIBILITY VARCHAR2(100) NOT NULL CHECK(ALBUM_VISIBILITY IN ('EVERYONE', 'FRIENDS_OF_FRIENDS', 'FRIENDS', 'MYSELF', 'CUSTOM' )),
        COVER_PHOTO_ID VARCHAR2(100) NOT NULL,
        --CONSTRAINT FK_14 FOREIGN KEY (COVER_PHOTO_ID) REFERENCES PHOTOS(PHOTO_ID) ON DELETE CASCADE,
        CONSTRAINT FK_15 FOREIGN KEY (ALBUM_OWNER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
        --IF owner or photo deleted delete?
);

CREATE TABLE PHOTOS(
        PHOTO_ID VARCHAR2(100) PRIMARY KEY,
        ALBUM_ID VARCHAR2(100) NOT NULL,
        PHOTO_CAPTION VARCHAR2(2000),
        PHOTO_CREATED_TIME TIMESTAMP NOT NULL,
        PHOTO_MODIFIED_TIME TIMESTAMP NOT NULL,
        PHOTO_LINK VARCHAR2(2000) NOT NULL
        --CONSTRAINT FK_16 FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS(ALBUM_ID) ON DELETE CASCADE
);

CREATE TABLE MESSAGE(
        MESSAGE_ID INTEGER PRIMARY KEY,
        SENDER_ID NUMBER NOT NULL,
        RECEIVER_ID NUMBER NOT NULL,
        MESSAGE_CONTENT VARCHAR2(2000),
        SENT_TIME TIMESTAMP NOT NULL,
        CONSTRAINT FK_19 FOREIGN KEY (SENDER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
        CONSTRAINT FK_20 FOREIGN KEY (RECEIVER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

ALTER TABLE ALBUMS ADD CONSTRAINT FK_14 FOREIGN KEY (COVER_PHOTO_ID) REFERENCES PHOTOS(PHOTO_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE;

ALTER TABLE PHOTOS ADD CONSTRAINT FK_16 FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS(ALBUM_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE;

CREATE TABLE TAGS(
        TAG_PHOTO_ID VARCHAR2(100) NOT NULL,
        TAG_SUBJECT_ID NUMBER NOT NULL,
        TAG_CREATED_TIME TIMESTAMP NOT NULL,
        TAG_X NUMBER NOT NULL,
        TAG_Y NUMBER NOT NULL,
        CONSTRAINT pk_TAG PRIMARY KEY (TAG_PHOTO_ID,TAG_SUBJECT_ID),
        CONSTRAINT FK_17 FOREIGN KEY (TAG_PHOTO_ID) REFERENCES PHOTOS(PHOTO_ID) ON DELETE CASCADE,
        CONSTRAINT FK_18 FOREIGN KEY (TAG_SUBJECT_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

CREATE SEQUENCE CIT START WITH 1;
CREATE SEQUENCE PRO START WITH 1;

CREATE OR REPLACE TRIGGER CIT_INC
BEFORE INSERT ON CITIES
FOR EACH ROW
BEGIN
	SELECT CIT.NEXTVAL
	INTO :NEW.CITY_ID
	FROM dual;
END;
/

CREATE OR REPLACE TRIGGER PRO_INC
BEFORE INSERT ON PROGRAMS
FOR EACH ROW
BEGIN
	SELECT PRO.NEXTVAL
	INTO :NEW.PROGRAM_ID
	FROM dual;
END;
/
CREATE TRIGGER FRI_DUP 
BEFORE INSERT ON FRIENDS
FOR EACH ROW
WHEN(new.USER1_ID>new.USER2_ID)
DECLARE mid NUMBER;
BEGIN
mid:=:new.USER1_ID;
:new.USER1_ID:=:new.USER2_ID;
:new.USER2_ID:=mid;
END;
/
